h2 Chatbot Features

.row.py-3
  .col-md-5
    h3 Conversation Branching
  .col-md-7
    p
      | bBot was built for deepbranching conversations, building context step
      | by step. Even failure handling can be relative to the specific context.
    p
      | Conversations can be isolated to a single user or open to a whole
      | channel, even allowing interactions to be authorised for certain groups.
.row.py-3
  .col-md-5
    h3 Full Control
  .col-md-7
    p
      | Our primary purpose is to drive interactions beyond the limits of cloud
      | services, with unique and extensible utilities.
    p
      | Perform authorisation, store conversation data on-premise, conduct user
      | journeys with CRM integration. With bBot there's really no limits.
.row.py-3
  .col-md-5
    h3 Scalable Conversations
  .col-md-7
    p
      | Our schemas define nodes of interaction that can route conversation
      | dynamically, instead of treating all conversation pathways as one tree.
    p
      | This allows enterprise teams to co-author unique journeys, each with
      | its own version management, authentication and workflows.
.row.py-3
  .col-md-5
    h3 Platform Agnostic
  .col-md-7
    p
      | We package a handful of adapters for popular platforms, but it's simple
      | to add new adapters from the community, or build one yourself.
    p
      | There's adapters for chat, data storage, natural language processing,
      | webhooks and analytics.
    p
      | You don't need to worry about porting logic between services as you 
      | scale or find new audiences. Write it once, then plug and play.
.row.py-3
  .col-md-5
    h3 Artificial Intelligence, or Not
  .col-md-7
    p
      | Use basic prompts or button responses, to route conversation. Or when
      | that fails, employ trained NLpproviders to infer more complex intent.
    p
      | We go with an Artificial Stupidity model first, for direct outcomes and
      | snappy performance, where intelligence is sometimes overkill.
.row.py-3
  .col-md-5
    h3 Stateful Conversation
  .col-md-7
    p
      | Every interaction can access past and present context, accumulating a
      | conversation state. For brevity, we call it #[code b].
    p
      | It includes the user, their input, branch information and results from
      | external processing, to fill message templates, send data to services,
      | determine next steps or even whether the bot should reply at all.
.row.py-3
  .col-md-5
    h3 International Agent
  .col-md-7
    p
      | Our users come from all over, so internationalisation was a core
      | consideration.
    p
      | Content can be defined separate to conversation flow, to allow drop-in
      | scripts in multiple languages, while following a common logic.

p.text-center
  a.btn.btn-lg.btn-primary(href="/modules") View Modules &amp; Roadmap

h2 Engineering Features

.row.py-3
  .col-md-4
    h3 Typescript üëè
  .col-md-8
    p
      | That means its self documenting and can be compiled to meet a range of
      | environments and module systems.
    p
      | From strict typing, we also get code intel which is critical when
      | modules can be extended outside the core package.
.row.py-3
  .col-md-4
    h3 Async üëè
  .col-md-8
    p
      | All critical components make use of asynchronous methods, so you can
      | make external requests and build context while processing input.
    p
      | Interactions can build on and tailor outcomes or route dialogue,
      | without relying on hammy catch-all workarounds.
.row.py-3
  .col-md-4
    h3 Testable üëè
  .col-md-8
    p
      | bBot is for building enterprise grade software, so it's unit tested to
      | the hilt!
    p
      | It also exposes a number of test helpers for engineers to apply to their
      | own conversation structures and extensions.
.row.py-3
  .col-md-4
    h3 Debuggable üëè
  .col-md-8
    p
      | By using simple exported node scripts to start the bot, it can be more
      | easily attached to debug inspectors.
    p
      | The code is semantic and logic is easy to follow with minimal
      | dependencies and simple module inheritance.
.row.py-3
  .col-md-4
    h3 Solid üëè
  .col-md-8
    p
      | bBot uses a minimal set of some of the most common Node.js packages,
      | to provide mature and documented components for easier development.
