.ml-auto.py-4
  h3 What is a conversation engine?
  p 
    | bBot provides the core framework for creating chatbots and apps that
    | operate via a conversational user interface (CUI).
  p 
    | It gives developers a toolbox for modelling user interactions and service
    | integrations and conducts the flow of data for the entire stack.

  h3 What is a bBot?
  p 
    | The name <strong>bBot</strong> is intentionally generic. It will humbly
    | stand in the shadows of new identities chosen for it by creators.
  p 
    | It's just a handy prefix for succinct code, with two main interfaces of
    | <strong>b</strong> for conversation state and <strong>bot</strong> for the
    | core instance.
  p 
    | What a modest and helpful little droid. Bleep Bloop.
  
  h3 Why wouldn't I use #[i &lt; insert megacorp cloud platform &gt;]?
  p 
    | The advantage of keeping the conversation layer separate and above the
    | component services is that it provides full control of your data and
    | application logic.
  p 
    | Plenty of services provide parts of a full CUI solution, but can hit a
    | wall as your needs expand beyond their capabilities. It can be costly to
    | scale within these services and sometimes impossible to implement bespoke solutions.
  p 
    | With bBot, when you need to change a service within the stack, you just
    | swap out the integration, instead of re-engineering the entire solution to
    | fit a new platform's requirements.
  
  h3 Where's your "no coding required" conversation designer?
  p 
    | Our approach is a little different, we've focused initially on providing
    | powerful tools for developers, specifically to overcome some of the
    | limitations of visual conversation design platforms.
  p 
    | A code-first interface enables deeper integration between conversation
    | and bespoke business integrations, user authentication, using data from an
    | API in your responses or handling user and conversation data entirely
    | on-premise.
  p 
    | One of the biggest challenges of enterprise CUI is allowing teams access
    | to multiple parallel behaviours and user journeys. It's not feasible to
    | have everyone logging in to a visual conversation design tool and
    | manipulating one behemoth conversation tree.
  p 
    | The tools bBot provides are aimed at users facing exactly these problems.
    | We intend to make it even easier to use and are working on a visual
    | solution, to allow more diverse skill sets access to those features.
  p 
    | But when we get there, it will be a unique solution that provides the
    | same flexibility and value for scale users as the current coding
    | interface.

  h3 Why Open Source?
  p 
    | The industry is having a natural reaction to big platform dominance,
    | moving towards open platforms. A model is proving out across many sectors
    | that is user aligned, instead of seeing users a resource to own.
  p
    | Take flagship examples like Android, Wordpress, Bitcoin, our friends at
    | Rocket.Chat and new decentralised web protocols like Blockstack.
  p 
    | The products that will thrive are those that focus on benefit to the
    | entire eco-system, with revenue models that are equitable with the growth
    | they enable in their community. These factors provide a more sustainable
    | relationship with our users and long term incentives on both sides.
  p 
    | Just as Rocket.Chat supports independent team messaging and Wordpress
    | supports independent web publishers, we hope bBot will power an
    | eco-system of independent conversational apps.
